networks:
  application:
    driver: bridge

volumes:
  mongodb_data:


services:

  ################################
  #           Database           #
  ################################
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    networks:
      - application
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 3


  ################################
  #       Backend Todolisto      #
  ################################
  backend:
    restart: always
    ports:
      - 8080:8080
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    environment:
      MONGO_HOSTNAME: ${MONGO_HOSTNAME}
      MONGO_PORT: ${MONGO_PORT}
      MONGO_USERNAME: ${MONGO_USERNAME}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_DB_NAME: ${MONGO_DB_NAME}
      MONGO_COLLECTION_NAME: "${MONGO_COLLECTION_NAME}"
    volumes:
      - ./backend:/app
    networks:
      - application
    depends_on:
      mongodb:
        condition: service_healthy

  ################################
  #       Frontend Todo-list      #
  ################################
  frontend:
    ports:
      - 3000:3000
    build:
      context: ./frontend
      dockerfile: ./Dockerfile
    environment:
      REACT_APP_BASE_URL: ${REACT_APP_BASE_URL}
    volumes:
      - ./frontend:/app
      - /app/node_modules  
    networks:
      - application
    depends_on:
      mongodb:
        condition: service_healthy